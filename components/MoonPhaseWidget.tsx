"use client";

import { useEffect, useState } from "react";
import Link from "next/link";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Moon, Sunrise, Sunset, Loader2, ExternalLink } from "lucide-react";
import SunCalc from "suncalc";
import type { ZodiacSign } from "@/lib/zodiac";

interface MoonData {
  phase: number; // 0-1 where 0=new moon, 0.5=full moon
  illumination: number; // 0-100%
  phaseName: string;
  emoji: string;
  moonrise: string | null;
  moonset: string | null;
  spiritualMeaning: string;
}

/**
 * Get moon phase name and emoji based on phase value (0-1)
 */
function getMoonPhaseInfo(phase: number): { name: string; emoji: string; meaning: string } {
  // Normalize phase to 0-1
  const normalizedPhase = phase % 1;

  if (normalizedPhase < 0.03 || normalizedPhase > 0.97) {
    return {
      name: "–ù–æ–≤–æ–ª—É–Ω–∏–µ",
      emoji: "üåë",
      meaning: "–í—Ä–µ–º–µ –∑–∞ –Ω–æ–≤–∏ –Ω–∞—á–∞–ª–∞ –∏ –ø–æ—Å—Ç–∞–≤—è–Ω–µ –Ω–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏—è. –ò–¥–µ–∞–ª–µ–Ω –º–æ–º–µ–Ω—Ç –∑–∞ –ø–ª–∞–Ω–∏—Ä–∞–Ω–µ –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ —Ü–µ–ª–∏—Ç–µ —Ç–∏."
    };
  } else if (normalizedPhase < 0.22) {
    return {
      name: "–ù–∞—Ä–∞—Å—Ç–≤–∞—â–∞ –ª—É–Ω–∞",
      emoji: "üåí",
      meaning: "–§–∞–∑–∞ –Ω–∞ —Ä–∞—Å—Ç–µ–∂ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ. –î–æ–±—Ä–æ –≤—Ä–µ–º–µ –∑–∞ –¥–µ–π—Å—Ç–≤–∏–µ –∏ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞ –ø–ª–∞–Ω–æ–≤–µ—Ç–µ —Å–∏."
    };
  } else if (normalizedPhase < 0.28) {
    return {
      name: "–ü—ä—Ä–≤–∞ —á–µ—Ç–≤—ä—Ä—Ç",
      emoji: "üåì",
      meaning: "–í—Ä–µ–º–µ –∑–∞ –≤–∑–µ–º–∞–Ω–µ –Ω–∞ —Ä–µ—à–µ–Ω–∏—è –∏ –ø—Ä–µ–æ–¥–æ–ª—è–≤–∞–Ω–µ –Ω–∞ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è. –ë—ä–¥–∏ –∞–∫—Ç–∏–≤–µ–Ω –∏ —Ä–µ—à–∏—Ç–µ–ª–µ–Ω."
    };
  } else if (normalizedPhase < 0.47) {
    return {
      name: "–ù–∞—Ä–∞—Å—Ç–≤–∞—â–∞ –ª—É–Ω–∞",
      emoji: "üåî",
      meaning: "–ï–Ω–µ—Ä–≥–∏—è—Ç–∞ —Å–µ —É—Å–∏–ª–≤–∞. –ü—Ä–æ–¥—ä–ª–∂–∞–≤–∞–π –¥–∞ —Ä–∞–±–æ—Ç–∏—à —É—Å–∏–ª–µ–Ω–æ –∫—ä–º —Ü–µ–ª–∏—Ç–µ —Å–∏ - —Ä–µ–∑—É–ª—Ç–∞—Ç–∏—Ç–µ –∏–¥–≤–∞—Ç."
    };
  } else if (normalizedPhase < 0.53) {
    return {
      name: "–ü—ä–ª–Ω–æ–ª—É–Ω–∏–µ",
      emoji: "üåï",
      meaning: "–ö—É–ª–º–∏–Ω–∞—Ü–∏—è –∏ –∑–∞–≤—ä—Ä—à–µ–Ω–æ—Å—Ç. –í—Ä–µ–º–µ –∑–∞ –ø—Ä–∞–∑–Ω—É–≤–∞–Ω–µ –Ω–∞ –ø–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ç–∞ –∏ –æ—Å–≤–æ–±–æ–∂–¥–∞–≤–∞–Ω–µ –æ—Ç –Ω–µ–Ω—É–∂–Ω–æ—Ç–æ."
    };
  } else if (normalizedPhase < 0.72) {
    return {
      name: "–ù–∞–º–∞–ª—è–≤–∞—â–∞ –ª—É–Ω–∞",
      emoji: "üåñ",
      meaning: "–§–∞–∑–∞ –Ω–∞ —Ä–µ—Ñ–ª–µ–∫—Å–∏—è –∏ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç. –î–æ–±—Ä–æ –≤—Ä–µ–º–µ –∑–∞ –∞–Ω–∞–ª–∏–∑ –Ω–∞ –æ–ø–∏—Ç–∞ –∏ –ø—Ä–µ–æ—Å–º–∏—Å–ª—è–Ω–µ."
    };
  } else if (normalizedPhase < 0.78) {
    return {
      name: "–ü–æ—Å–ª–µ–¥–Ω–∞ —á–µ—Ç–≤—ä—Ä—Ç",
      emoji: "üåó",
      meaning: "–í—Ä–µ–º–µ –∑–∞ –ø—É—Å–∫–∞–Ω–µ –∏ –ø—Ä–æ—â–∞–≤–∞–Ω–µ. –û—Å–≤–æ–±–æ–¥–∏ —Å–µ –æ—Ç —Å—Ç–∞—Ä–∏—Ç–µ –Ω–∞–≤–∏—Ü–∏ –∏ —É–±–µ–∂–¥–µ–Ω–∏—è."
    };
  } else {
    return {
      name: "–ù–∞–º–∞–ª—è–≤–∞—â–∞ –ª—É–Ω–∞",
      emoji: "üåò",
      meaning: "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞ –Ω–æ–≤ —Ü–∏–∫—ä–ª. –ü–æ—á–∏–Ω–∏ —Å–µ, –º–µ–¥–∏—Ç–∏—Ä–∞–π –∏ –ø–æ–¥–≥–æ—Ç–≤–∏ —Å–µ –∑–∞ –Ω–æ–≤–∏ –Ω–∞—á–∞–ª–∞."
    };
  }
}

/**
 * Format time in HH:MM format
 */
function formatTime(date: Date | null): string | null {
  if (!date) return null;

  const hours = date.getHours().toString().padStart(2, '0');
  const minutes = date.getMinutes().toString().padStart(2, '0');
  return `${hours}:${minutes}`;
}

/**
 * Get personalized moon advice based on zodiac sign and phase
 */
function getPersonalizedAdvice(phaseName: string, zodiacSign?: ZodiacSign): string {
  if (!zodiacSign) {
    return "–†–µ–≥–∏—Å—Ç—Ä–∏—Ä–∞–π —Å–µ –∑–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω–∏ –ø—Ä–µ–ø–æ—Ä—ä–∫–∏ —Å–ø–æ—Ä–µ–¥ —Ç–≤–æ—è—Ç–∞ –∑–æ–¥–∏—è.";
  }

  // Fire signs (Aries, Leo, Sagittarius)
  const fireSigns: ZodiacSign[] = ["aries", "leo", "sagittarius"];
  // Earth signs (Taurus, Virgo, Capricorn)
  const earthSigns: ZodiacSign[] = ["taurus", "virgo", "capricorn"];
  // Air signs (Gemini, Libra, Aquarius)
  const airSigns: ZodiacSign[] = ["gemini", "libra", "aquarius"];
  // Water signs (Cancer, Scorpio, Pisces)
  const waterSigns: ZodiacSign[] = ["cancer", "scorpio", "pisces"];

  const isFire = fireSigns.includes(zodiacSign);
  const isEarth = earthSigns.includes(zodiacSign);
  const isAir = airSigns.includes(zodiacSign);
  const isWater = waterSigns.includes(zodiacSign);

  if (phaseName === "–ù–æ–≤–æ–ª—É–Ω–∏–µ") {
    if (isFire) return "–ù–æ–≤–æ–ª—É–Ω–∏–µ—Ç–æ –µ —Ç–≤–æ–µ—Ç–æ –≤—Ä–µ–º–µ –∑–∞ –¥–µ–π—Å—Ç–≤–∏–µ! –ü–æ—Å—Ç–∞–≤–∏ —Å–º–µ–ª–∏ —Ü–µ–ª–∏ –∏ –∑–∞–ø–æ—á–Ω–∏ –Ω–µ—â–æ –¥—Ä—ä–∑–∫–æ.";
    if (isEarth) return "–ó–∞–∑–µ–º–∏ –Ω–∞–º–µ—Ä–µ–Ω–∏—è—Ç–∞ —Å–∏. –°—ä–∑–¥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–µ–Ω –ø–ª–∞–Ω —Å –ø—Ä–∞–∫—Ç–∏—á–Ω–∏ —Å—Ç—ä–ø–∫–∏.";
    if (isAir) return "–í–∏–∑—É–∞–ª–∏–∑–∏—Ä–∞–π –∏ –∫–æ–º—É–Ω–∏–∫–∏—Ä–∞–π —Ü–µ–ª–∏—Ç–µ —Å–∏. –ì–æ–≤–æ—Ä–∏ –∑–∞ –º–µ—á—Ç–∏—Ç–µ —Å–∏ —Å –±–ª–∏–∑–∫–∏.";
    return "–ü–æ—á—É–≤—Å—Ç–≤–∞–π –¥—ä–ª–±–æ–∫–æ –∫–∞–∫–≤–æ –∏—Å–∫–∞—à. –î–æ–≤–µ—Ä—ù —Å–µ –Ω–∞ –∏–Ω—Ç—É–∏—Ü–∏—è—Ç–∞ —Å–∏.";
  }

  if (phaseName === "–ü—ä–ª–Ω–æ–ª—É–Ω–∏–µ") {
    if (isFire) return "–û—Ç–ø—Ä–∞–∑–Ω—É–≤–∞–π –ø–æ–±–µ–¥–∏—Ç–µ —Å–∏! –ï–Ω–µ—Ä–≥–∏—è—Ç–∞ —Ç–∏ –µ –Ω–∞ –≤—Ä—ä—Ö - –∏—Å–∫—Ä–∏ —â–µ —Ö–≤—ä—Ä—á–∞—Ç.";
    if (isEarth) return "–ë–ª–∞–≥–æ–¥–∞—Ä–∏ –∑–∞ –ø–æ—Å—Ç–∏–≥–Ω–∞—Ç–æ—Ç–æ –∏ –æ—Ç–ø—É—Å–Ω–∏ –∫–æ–Ω—Ç—Ä–æ–ª–∞. –î–æ–≤–µ—Ä–∏ —Å–µ –Ω–∞ –ø—Ä–æ—Ü–µ—Å–∞.";
    if (isAir) return "–û–±–º–∏—Å–ª–∏ –ø–æ—Å—Ç–∏–∂–µ–Ω–∏—è—Ç–∞ —Å–∏ –∏ —Å–ø–æ–¥–µ–ª–∏ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—Ç–∞ —Å–∏ —Å –¥—Ä—É–≥–∏—Ç–µ.";
    return "–ï–º–æ—Ü–∏–∏—Ç–µ –º–æ–≥–∞—Ç –¥–∞ —Å–∞ —Å–∏–ª–Ω–∏ - –ø—Ä–∞–∫—Ç–∏–∫—É–≤–∞–π –æ—Å–≤–æ–±–æ–∂–¥–∞–≤–∞—â–∞ –º–µ–¥–∏—Ç–∞—Ü–∏—è.";
  }

  if (phaseName.includes("–ù–∞—Ä–∞—Å—Ç–≤–∞—â–∞")) {
    if (isFire) return "–î–µ–π—Å—Ç–≤–∞–π —Å–º–µ–ª–æ! –ï–Ω–µ—Ä–≥–∏—è—Ç–∞ —Ä–∞—Å—Ç–µ - –≤—Ä–µ–º–µ –µ –¥–∞ –≤–∑–µ–º–µ—à –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞—Ç–∞.";
    if (isEarth) return "–ì—Ä–∞–¥—ù –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª–Ω–æ. –í—Å—è–∫–∞ –º–∞–ª–∫–∞ —Å—Ç—ä–ø–∫–∞ —Ç–µ –ø—Ä–∏–±–ª–∏–∂–∞–≤–∞ –∫—ä–º —Ü–µ–ª—Ç–∞.";
    if (isAir) return "–ú—Ä–µ–∂–∏ —Å–µ –∏ –∫–æ–º—É–Ω–∏–∫–∏—Ä–∞–π. –°–ø–æ–¥–µ–ª—è–π –∏–¥–µ–∏—Ç–µ —Å–∏ —Å –µ–¥–∏–Ω–æ–º–∏—à–ª–µ–Ω–∏—Ü–∏.";
    return "–°–ª—É—à–∞–π –∏–Ω—Ç—É–∏—Ü–∏—è—Ç–∞ —Å–∏ - —Ç—è —Ç–µ –≤–æ–¥–∏ –∫—ä–º –ø—Ä–∞–≤–∏–ª–Ω–∞—Ç–∞ –ø–æ—Å–æ–∫–∞.";
  }

  if (phaseName.includes("–ù–∞–º–∞–ª—è–≤–∞—â–∞")) {
    if (isFire) return "–ù–∞–º–∞–ª–∏ —Ç–µ–º–ø–æ—Ç–æ. –î–æ—Ä–∏ –æ–≥—ä–Ω—è—Ç —Å–µ –Ω—É–∂–¥–∞–µ –æ—Ç –ø–æ—á–∏–≤–∫–∞ –ø—Ä–µ–¥–∏ –Ω–æ–≤–æ—Ç–æ –ø–ª–∞–º—ä—á–µ.";
    if (isEarth) return "–û—Ä–≥–∞–Ω–∏–∑–∏—Ä–∞–π –∏ –ø–æ—á–∏—Å—Ç–∏ - —Ñ–∏–∑–∏—á–µ—Å–∫–∏ –∏ –µ–º–æ—Ü–∏–æ–Ω–∞–ª–Ω–æ. –ü–æ–¥—Ä–µ–¥–∏ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ—Ç–æ —Å–∏.";
    if (isAir) return "–†–µ—Ñ–ª–µ–∫—Ç–∏—Ä–∞–π –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä–∞–π. –ö–∞–∫–≤–æ –Ω–∞—É—á–∏ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ —Å–µ–¥–º–∏—Ü–∏?";
    return "–ü–æ—á–∏–Ω–∏ —Å–µ –∏ –æ–±—Ä–∞–±–æ—Ç–∏ –µ–º–æ—Ü–∏–∏—Ç–µ —Å–∏. –ú–µ–¥–∏—Ç–∞—Ü–∏—è—Ç–∞ –µ —Ç–≤–æ–π –ø—Ä–∏—è—Ç–µ–ª —Å–µ–≥–∞.";
  }

  return "–†–∞–±–æ—Ç–∏ —Å—ä–∑–Ω–∞—Ç–µ–ª–Ω–æ —Å –µ–Ω–µ—Ä–≥–∏—è—Ç–∞ –Ω–∞ –ª—É–Ω–∞—Ç–∞ —Å–ø–æ—Ä–µ–¥ —Ç–≤–æ—è—Ç–∞ –∑–æ–¥–∏—è.";
}

interface MoonPhaseWidgetProps {
  zodiacSign?: ZodiacSign;
}

export function MoonPhaseWidget({ zodiacSign }: MoonPhaseWidgetProps = {}) {
  const [moonData, setMoonData] = useState<MoonData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    try {
      setLoading(true);
      setError(null);

      const now = new Date();

      // Sofia, Bulgaria coordinates (default location)
      const lat = 42.6977;
      const lng = 23.3219;

      // Calculate moon illumination and phase
      const moonIllumination = SunCalc.getMoonIllumination(now);
      const moonTimes = SunCalc.getMoonTimes(now, lat, lng);

      // Get phase info
      const phaseInfo = getMoonPhaseInfo(moonIllumination.phase);

      // Format moon data
      const data: MoonData = {
        phase: moonIllumination.phase,
        illumination: Math.round(moonIllumination.fraction * 100),
        phaseName: phaseInfo.name,
        emoji: phaseInfo.emoji,
        moonrise: formatTime(moonTimes.rise),
        moonset: formatTime(moonTimes.set),
        spiritualMeaning: phaseInfo.meaning
      };

      setMoonData(data);
    } catch (err) {
      console.error('Moon phase calculation error:', err);
      setError('–ù–µ —É—Å–ø—è—Ö–º–µ –¥–∞ –∑–∞—Ä–µ–¥–∏–º –ª—É–Ω–Ω–∞—Ç–∞ —Ñ–∞–∑–∞.');
    } finally {
      setLoading(false);
    }
  }, []);

  if (loading) {
    return (
      <Card className="glass-card">
        <CardContent className="pt-20 pb-20">
          <div className="flex flex-col items-center justify-center gap-4">
            <Loader2 className="w-8 h-8 text-accent-400 animate-spin" />
            <p className="text-zinc-400 text-sm">–ò–∑—á–∏—Å–ª—è–≤–∞–º–µ –ª—É–Ω–Ω–∞—Ç–∞ —Ñ–∞–∑–∞...</p>
          </div>
        </CardContent>
      </Card>
    );
  }

  if (error || !moonData) {
    return (
      <Card className="glass-card">
        <CardContent className="pt-6">
          <p className="text-red-400 text-center">{error || '–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ'}</p>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="glass-card">
      <CardHeader>
        <CardTitle className="flex items-center gap-3 text-zinc-50">
          <Moon className="w-6 h-6 text-accent-400" />
          <div className="flex-1">
            <div>–õ—É–Ω–Ω–∞ –§–∞–∑–∞</div>
            <div className="text-sm font-normal text-zinc-400">
              {new Date().toLocaleDateString('bg-BG', {
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })}
            </div>
          </div>
        </CardTitle>
      </CardHeader>

      <CardContent>
        {/* Moon Phase Display */}
        <div className="flex items-center gap-6 mb-6">
          <div className="text-7xl">{moonData.emoji}</div>
          <div className="flex-1">
            <div className="text-2xl font-semibold text-zinc-100 mb-1">
              {moonData.phaseName}
            </div>
            <div className="text-zinc-400">
              –û—Å–≤–µ—Ç–µ–Ω–æ—Å—Ç: <span className="text-accent-400 font-semibold">{moonData.illumination}%</span>
            </div>
          </div>
        </div>

        {/* Moon Rise/Set Times */}
        {(moonData.moonrise || moonData.moonset) && (
          <div className="grid grid-cols-2 gap-4 mb-6">
            {moonData.moonrise && (
              <div className="p-3 bg-zinc-950/50 rounded-lg border border-zinc-800">
                <div className="flex items-center gap-2 text-zinc-400 text-sm mb-1">
                  <Sunrise className="w-4 h-4" />
                  <span>–ò–∑–≥—Ä–µ–≤</span>
                </div>
                <div className="text-zinc-100 font-semibold text-lg">
                  {moonData.moonrise}
                </div>
              </div>
            )}

            {moonData.moonset && (
              <div className="p-3 bg-zinc-950/50 rounded-lg border border-zinc-800">
                <div className="flex items-center gap-2 text-zinc-400 text-sm mb-1">
                  <Sunset className="w-4 h-4" />
                  <span>–ó–∞–ª–µ–∑</span>
                </div>
                <div className="text-zinc-100 font-semibold text-lg">
                  {moonData.moonset}
                </div>
              </div>
            )}
          </div>
        )}

        {/* Spiritual Meaning */}
        <div className="p-4 bg-accent-950/20 rounded-lg border border-accent-800/30 mb-4">
          <div className="text-sm text-accent-300 mb-2 font-semibold flex items-center gap-2">
            <span className="text-lg">‚ú®</span>
            –î—É—Ö–æ–≤–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ
          </div>
          <div className="text-zinc-200 text-sm leading-relaxed">
            {moonData.spiritualMeaning}
          </div>
        </div>

        {/* Personalized Advice */}
        <div className="p-4 bg-purple-950/20 rounded-lg border border-purple-800/30 mb-4">
          <div className="text-sm text-purple-300 mb-2 font-semibold flex items-center gap-2">
            <span className="text-lg">üîÆ</span>
            {zodiacSign ? "–õ–∏—á–Ω–æ –∑–∞ —Ç–µ–±" : "–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–∞–Ω —Å—ä–≤–µ—Ç"}
          </div>
          <div className="text-zinc-200 text-sm leading-relaxed">
            {getPersonalizedAdvice(moonData.phaseName, zodiacSign)}
          </div>
        </div>

        {/* Link to full moon phase page */}
        <Link
          href="/moon-phase"
          className="flex items-center justify-center gap-2 text-sm text-accent-400 hover:text-accent-300 transition-colors"
        >
          <span>–í–∏–∂ –ø—ä–ª–Ω–∏—è –ª—É–Ω–µ–Ω –∫–∞–ª–µ–Ω–¥–∞—Ä</span>
          <ExternalLink className="w-4 h-4" />
        </Link>
      </CardContent>
    </Card>
  );
}
