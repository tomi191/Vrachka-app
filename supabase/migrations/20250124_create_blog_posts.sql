-- Create blog_posts table for SEO content
-- This will store daily horoscope articles and evergreen content

CREATE TABLE IF NOT EXISTS blog_posts (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  slug TEXT UNIQUE NOT NULL,
  title TEXT NOT NULL,
  description TEXT NOT NULL,
  content TEXT NOT NULL,

  -- SEO fields
  keywords TEXT[] DEFAULT '{}',
  meta_title TEXT,
  meta_description TEXT,

  -- Category and tags
  category TEXT NOT NULL CHECK (category IN (
    'daily-horoscope',     -- Дневни хороскопи за всяка зодия
    'weekly-horoscope',    -- Седмични прогнози
    'monthly-horoscope',   -- Месечни прогнози
    'tarot',               -- Таро статии
    'astrology',           -- Астрология обучение
    'numerology',          -- Нумерология
    'spirituality',        -- Духовност
    'compatibility',       -- Съвместимост между зодии
    'lunar-calendar'       -- Лунен календар
  )),
  zodiac_sign TEXT CHECK (zodiac_sign IS NULL OR zodiac_sign IN (
    'oven', 'telec', 'bliznaci', 'rak', 'lav', 'deva',
    'vezni', 'skorpion', 'strelec', 'kozirog', 'vodolej', 'ribi'
  )),
  tags TEXT[] DEFAULT '{}',

  -- Publishing
  published BOOLEAN DEFAULT false,
  published_at TIMESTAMPTZ,
  author_id UUID REFERENCES profiles(id),

  -- AI generation metadata
  generated_by_ai BOOLEAN DEFAULT true,
  ai_model TEXT DEFAULT 'gpt-4-1106-preview',

  -- Analytics
  view_count INT DEFAULT 0,

  -- Timestamps
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Indexes for performance
CREATE INDEX idx_blog_posts_slug ON blog_posts (slug);
CREATE INDEX idx_blog_posts_category ON blog_posts (category);
CREATE INDEX idx_blog_posts_zodiac_sign ON blog_posts (zodiac_sign);
CREATE INDEX idx_blog_posts_published ON blog_posts (published, published_at DESC) WHERE published = true;
CREATE INDEX idx_blog_posts_created_at ON blog_posts (created_at DESC);

-- Full-text search index (for Bulgarian content)
CREATE INDEX idx_blog_posts_search ON blog_posts USING gin(to_tsvector('english', title || ' ' || description || ' ' || content));

-- Function to auto-update updated_at
CREATE OR REPLACE FUNCTION update_blog_posts_updated_at()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER update_blog_posts_updated_at_trigger
  BEFORE UPDATE ON blog_posts
  FOR EACH ROW
  EXECUTE FUNCTION update_blog_posts_updated_at();

-- RLS Policies
ALTER TABLE blog_posts ENABLE ROW LEVEL SECURITY;

-- Everyone can read published posts
CREATE POLICY "Published blog posts are publicly visible" ON blog_posts
  FOR SELECT
  USING (published = true);

-- Authenticated users can see all posts (for preview)
CREATE POLICY "Authenticated users can see all posts" ON blog_posts
  FOR SELECT
  TO authenticated
  USING (true);

-- Only admins can insert/update/delete
CREATE POLICY "Admins can manage blog posts" ON blog_posts
  FOR ALL
  TO authenticated
  USING (
    EXISTS (
      SELECT 1 FROM profiles
      WHERE id = auth.uid() AND is_admin = true
    )
  )
  WITH CHECK (
    EXISTS (
      SELECT 1 FROM profiles
      WHERE id = auth.uid() AND is_admin = true
    )
  );

-- Comments for documentation
COMMENT ON TABLE blog_posts IS 'Blog posts for SEO content - daily horoscopes and evergreen articles';
COMMENT ON COLUMN blog_posts.slug IS 'URL-friendly slug for SEO (e.g., horoskop-oven-dnes-2025-01-24)';
COMMENT ON COLUMN blog_posts.category IS 'Content category for organization and filtering';
COMMENT ON COLUMN blog_posts.zodiac_sign IS 'Associated zodiac sign for horoscope articles';
COMMENT ON COLUMN blog_posts.generated_by_ai IS 'Whether this content was generated by AI or written manually';
COMMENT ON COLUMN blog_posts.view_count IS 'Number of times this article has been viewed';
