'use client';

import { useEffect, useState, Suspense } from 'react';
import { useSearchParams } from 'next/navigation';
import Link from 'next/link';
import { CheckCircle, XCircle, Loader2, Mail } from 'lucide-react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Navigation } from '@/components/Navigation';
import { Footer } from '@/components/Footer';
import { GradientText } from '@/components/ui/gradient-text';

type UnsubscribeState = 'loading' | 'confirm' | 'processing' | 'success' | 'error';

function UnsubscribeContent() {
  const searchParams = useSearchParams();
  const token = searchParams.get('token');

  const [state, setState] = useState<UnsubscribeState>('loading');
  const [email, setEmail] = useState<string>('');
  const [error, setError] = useState<string>('');

  useEffect(() => {
    if (!token) {
      setState('error');
      setError('–õ–∏–ø—Å–≤–∞ –≤–∞–ª–∏–¥–µ–Ω —Ç–æ–∫–µ–Ω –∑–∞ –æ—Ç–ø–∏—Å–≤–∞–Ω–µ');
      return;
    }

    // Validate token and get subscriber info
    const validateToken = async () => {
      try {
        const response = await fetch(`/api/newsletter/unsubscribe?token=${token}`);
        const data = await response.json();

        if (!response.ok || !data.valid) {
          setState('error');
          setError(data.error || '–ù–µ–≤–∞–ª–∏–¥–µ–Ω –∏–ª–∏ –∏–∑—Ç–µ–∫—ä–ª —Ç–æ–∫–µ–Ω');
          return;
        }

        setEmail(data.email);
        setState('confirm');
      } catch (err) {
        setState('error');
        setError('–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞—Ç–∞ –Ω–∞ —Ç–æ–∫–µ–Ω–∞');
      }
    };

    validateToken();
  }, [token]);

  const handleUnsubscribe = async () => {
    if (!token) return;

    setState('processing');

    try {
      const response = await fetch('/api/newsletter/unsubscribe', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ token }),
      });

      const data = await response.json();

      if (!response.ok) {
        setState('error');
        setError(data.error || '–í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ—Ç–ø–∏—Å–≤–∞–Ω–µ—Ç–æ');
        return;
      }

      setState('success');
    } catch (err) {
      setState('error');
      setError('–í—ä–∑–Ω–∏–∫–Ω–∞ –Ω–µ–æ—á–∞–∫–≤–∞–Ω–∞ –≥—Ä–µ—à–∫–∞');
    }
  };

  return (
    <div className="min-h-screen bg-gradient-dark">
      <Navigation />
      <div className="max-w-2xl mx-auto px-4 pt-32 pb-16">
        {/* Header */}
        <div className="text-center space-y-2 mb-8">
          <h1 className="text-4xl font-bold">
            <GradientText from="#9333ea" via="#ec4899" to="#9333ea">
              –û—Ç–ø–∏—Å–≤–∞–Ω–µ –æ—Ç –±—é–ª–µ—Ç–∏–Ω–∞
            </GradientText>
          </h1>
        </div>

        {/* Loading State */}
        {state === 'loading' && (
          <Card className="glass-card">
            <CardContent className="py-12 text-center space-y-4">
              <Loader2 className="w-12 h-12 mx-auto text-accent-400 animate-spin" />
              <p className="text-zinc-400">–ó–∞—Ä–µ–∂–¥–∞–Ω–µ...</p>
            </CardContent>
          </Card>
        )}

        {/* Confirmation State */}
        {state === 'confirm' && (
          <Card className="glass-card">
            <CardHeader>
              <div className="w-16 h-16 mx-auto mb-4 rounded-full bg-accent-500/10 flex items-center justify-center">
                <Mail className="w-8 h-8 text-accent-400" />
              </div>
              <CardTitle className="text-zinc-50 text-center">
                –ü–æ—Ç–≤—ä—Ä–¥–µ—Ç–µ –æ—Ç–ø–∏—Å–≤–∞–Ω–µ—Ç–æ
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="text-center space-y-2">
                <p className="text-zinc-300">
                  –°–∏–≥—É—Ä–Ω–∏ –ª–∏ —Å—Ç–µ, —á–µ –∏—Å–∫–∞—Ç–µ –¥–∞ —Å–µ –æ—Ç–ø–∏—à–µ—Ç–µ –æ—Ç –¥–Ω–µ–≤–Ω–∏—è —Ö–æ—Ä–æ—Å–∫–æ–ø?
                </p>
                <p className="text-sm text-zinc-500">
                  Email: <span className="text-accent-400">{email}</span>
                </p>
              </div>

              <div className="bg-zinc-900/50 border border-zinc-800 rounded-lg p-4">
                <p className="text-sm text-zinc-400 leading-relaxed">
                  –°–ª–µ–¥ –æ—Ç–ø–∏—Å–≤–∞–Ω–µ –Ω—è–º–∞ –¥–∞ –ø–æ–ª—É—á–∞–≤–∞—Ç–µ –ø–æ–≤–µ—á–µ –¥–Ω–µ–≤–Ω–∏ —Ö–æ—Ä–æ—Å–∫–æ–ø–∏ –∏ –∞—Å—Ç—Ä–æ–ª–æ–≥–∏—á–Ω–∏ —Å—ä–≤–µ—Ç–∏ –æ—Ç Vrachka.
                </p>
              </div>

              <div className="flex gap-3">
                <Button
                  onClick={handleUnsubscribe}
                  variant="destructive"
                  className="flex-1"
                >
                  –î–∞, –æ—Ç–ø–∏—à–∏ –º–µ
                </Button>
                <Button
                  asChild
                  variant="outline"
                  className="flex-1 border-zinc-700 hover:bg-zinc-800"
                >
                  <Link href="/horoscope">–û—Ç–∫–∞–∂–∏</Link>
                </Button>
              </div>
            </CardContent>
          </Card>
        )}

        {/* Processing State */}
        {state === 'processing' && (
          <Card className="glass-card">
            <CardContent className="py-12 text-center space-y-4">
              <Loader2 className="w-12 h-12 mx-auto text-accent-400 animate-spin" />
              <p className="text-zinc-400">–û–±—Ä–∞–±–æ—Ç–≤–∞–Ω–µ...</p>
            </CardContent>
          </Card>
        )}

        {/* Success State */}
        {state === 'success' && (
          <Card className="glass-card">
            <CardContent className="py-12 text-center space-y-6">
              <div className="w-16 h-16 mx-auto rounded-full bg-green-500/10 flex items-center justify-center">
                <CheckCircle className="w-10 h-10 text-green-500" />
              </div>

              <div className="space-y-2">
                <h2 className="text-2xl font-bold text-zinc-50">
                  –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–≤–∞–Ω–µ
                </h2>
                <p className="text-zinc-300">
                  –£—Å–ø–µ—à–Ω–æ —Å–µ –æ—Ç–ø–∏—Å–∞—Ö—Ç–µ –æ—Ç –Ω–∞—à–∏—è –±—é–ª–µ—Ç–∏–Ω.
                </p>
                <p className="text-sm text-zinc-500">
                  –ù—è–º–∞ –¥–∞ –ø–æ–ª—É—á–∞–≤–∞—Ç–µ –ø–æ–≤–µ—á–µ –∏–º–µ–π–ª–∏ –æ—Ç –Ω–∞—Å.
                </p>
              </div>

              <div className="bg-accent-500/10 border border-accent-500/20 rounded-lg p-4">
                <p className="text-sm text-zinc-300 leading-relaxed">
                  üíú –ê–∫–æ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ—Ç–æ —Å–∏, –≤–∏–Ω–∞–≥–∏ –º–æ–∂–µ—Ç–µ –¥–∞ —Å–µ –∑–∞–ø–∏—à–µ—Ç–µ –æ—Ç–Ω–æ–≤–æ –∑–∞ –±—é–ª–µ—Ç–∏–Ω–∞ –æ—Ç –Ω–∞—à–∏—è —Å–∞–π—Ç.
                </p>
              </div>

              <Button
                asChild
                className="bg-accent-600 hover:bg-accent-700"
              >
                <Link href="/">–ö—ä–º –Ω–∞—á–∞–ª–Ω–∞—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞</Link>
              </Button>
            </CardContent>
          </Card>
        )}

        {/* Error State */}
        {state === 'error' && (
          <Card className="glass-card">
            <CardContent className="py-12 text-center space-y-6">
              <div className="w-16 h-16 mx-auto rounded-full bg-red-500/10 flex items-center justify-center">
                <XCircle className="w-10 h-10 text-red-500" />
              </div>

              <div className="space-y-2">
                <h2 className="text-2xl font-bold text-zinc-50">
                  –í—ä–∑–Ω–∏–∫–Ω–∞ –≥—Ä–µ—à–∫–∞
                </h2>
                <p className="text-zinc-300">
                  {error || '–ù–µ—â–æ —Å–µ –æ–±—ä—Ä–∫–∞ –ø—Ä–∏ –æ—Ç–ø–∏—Å–≤–∞–Ω–µ—Ç–æ'}
                </p>
              </div>

              <div className="bg-zinc-900/50 border border-zinc-800 rounded-lg p-4">
                <p className="text-sm text-zinc-400 leading-relaxed">
                  –ê–∫–æ –ø—Ä–æ–±–ª–µ–º—ä—Ç –ø—Ä–æ–¥—ä–ª–∂–∞–≤–∞, —Å–≤—ä—Ä–∂–µ—Ç–µ —Å–µ —Å –Ω–∞—Å –Ω–∞{' '}
                  <a
                    href="mailto:support@vrachka.eu"
                    className="text-accent-400 hover:text-accent-300 underline"
                  >
                    support@vrachka.eu
                  </a>
                </p>
              </div>

              <Button
                asChild
                className="bg-accent-600 hover:bg-accent-700"
              >
                <Link href="/">–ö—ä–º –Ω–∞—á–∞–ª–Ω–∞—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞</Link>
              </Button>
            </CardContent>
          </Card>
        )}
      </div>
      <Footer />
    </div>
  );
}

export default function UnsubscribePage() {
  return (
    <Suspense fallback={
      <div className="min-h-screen bg-gradient-dark">
        <Navigation />
        <div className="max-w-2xl mx-auto px-4 pt-32 pb-16">
          <Card className="glass-card">
            <CardContent className="py-12 text-center space-y-4">
              <Loader2 className="w-12 h-12 mx-auto text-accent-400 animate-spin" />
              <p className="text-zinc-400">–ó–∞—Ä–µ–∂–¥–∞–Ω–µ...</p>
            </CardContent>
          </Card>
        </div>
        <Footer />
      </div>
    }>
      <UnsubscribeContent />
    </Suspense>
  );
}
